from vpython import * 
from pypylon import pylon
import cv2 as cv
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib import style
import time


# conecting to the first available camera
camera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())

# Grabing Continusely (video) with minimal delay
camera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly) 
converter = pylon.ImageFormatConverter()

# converting to opencv bgr format
converter.OutputPixelFormat = pylon.PixelType_BGR8packed
converter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned

#def for background change to black and white
#object_detector = cv.createBackgroundSubtractorMOG2(history=100, varThreshold=70)
detection = []

#Camera grabbing while loop 
while camera.IsGrabbing():
    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)
    if grabResult.GrabSucceeded():
        # Access the image data
        image = converter.Convert(grabResult)
        img = image.GetArray()
    if not grabResult.GrabSucceeded: break

#Frame to change picture into better ditection mode
    GrayFrame = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
    blurFrame = cv.GaussianBlur(GrayFrame, (17,17),0)
    thresh = cv.threshold(blurFrame, 35, 255, cv.THRESH_BINARY)[1]
    
#detect things without dark room used to use imc
    circles = cv.HoughCircles(thresh, cv.HOUGH_GRADIENT, 1, 5000, param1=250, param2=13, minRadius=75, maxRadius=125)
    if circles is not None:
        for i in circles[0, :]:
            x = np.append(x , i[0])
            y = np.append(y , i[1])
            center = np.uint16(np.around((i[0], i[1])))
            # circle center
            cv.circle(img, center, 1, (0, 100, 100), 3)
            # circle outline
            radius = np.uint16(np.around(i[2]))
            cv.circle(img, center, radius, (0, 255, 0), 3)
            
#out put section for output the coordinate and video
    cv.imshow("live video", img)
    cv.imshow("detection", thresh)
    
#picture detacting watiing section
    key = cv.waitKey(30) 
    if key == 27 : break
    
#camera control         
camera.StopGrabbing()
cv.destroyAllWindows()
